@page
@model cinema_cs.Pages.Account.TicketsModel
@using cinema_cs.Models
@{
    ViewData["Title"] = "My Tickets";
}

<div class="container py-5 text-light">
    <h2>My Tickets</h2>
    <hr />

    <h4>Active Tickets</h4>
    @if (Model.ActiveTickets.Any())
    {
        <div class="list-group mb-5">
            @foreach (var group in Model.ActiveTickets
                                       .GroupBy(t => t.Screening)
                                       .OrderBy(g => g.Key.Date))
            {
                var screening = group.Key;
                var seats = group.Select(t => $"{t.Seat.Row}-{t.Seat.Number}");
                var totalPrice = group.Sum(t => t.Price);
                <div class="list-group-item border-0 d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center bg-custom text-light mb-2">
                    <div class="mb-2 mb-md-0">
                        <strong>@screening.Movie.Title</strong><br />
                        Screening: @screening.Date.ToString("f")<br />
                        Room: @screening.Room.Id.ToString()<br />
                        Seats: @string.Join(", ", seats)<br />
                        Total Price: @totalPrice.ToString() PLN
                    </div>
                    <div>
                        <form method="post" asp-page-handler="Refund" asp-route-screeningId="@screening.Id" class="mt-2">
                            <button type="submit" class="btn btn-sm btn-outline-danger">Request Refund</button>
                        </form>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p class="text-muted">No active tickets.</p>
    }

    <h4>Archived Tickets</h4>
    @if (Model.ArchivedTickets.Any())
    {
        <div class="list-group">
            @foreach (var group in Model.ArchivedTickets
                                       .GroupBy(t => t.Screening)
                                       .OrderByDescending(g => g.Key.Date))
            {
                var screening = group.Key;
                var seats = group.Select(t => $"{t.Seat.Row}-{t.Seat.Number}");
                var totalPrice = group.Sum(t => t.Price);
                <div class="list-group-item border-0 bg-custom text-light mb-2">
                    <strong>@screening.Movie.Title</strong><br />
                    Screening: @screening.Date.ToString("f")<br />
                    Room: @screening.Room.Id.ToString()<br />
                    Seats: @string.Join(", ", seats)<br />
                    Total Price: @totalPrice.ToString() PLN
                </div>
            }
        </div>
    }
    else
    {
        <p class="text-muted">No archived tickets.</p>
    }
</div>
